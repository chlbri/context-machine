{"version":3,"file":"context-machine.cjs.production.min.js","sources":["../src/hooks.ts","../src/Provider.tsx","../src/createContextMachine.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n  useActor,\n  useInterpret,\n  useSelector as useSelectorR,\n} from '@xstate/react';\nimport { MaybeLazy, UseMachineOptions } from '@xstate/react/lib/types';\nimport { useContext as useContextR } from 'react';\nimport {\n  EventObject,\n  InterpreterOptions,\n  MachineOptions,\n  StateMachine,\n  Typestate,\n} from 'xstate';\nimport { ContextMachineType, MachineType, Selector } from './types';\n\nexport function usePrepare<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  machine: MaybeLazy<StateMachine<TContext, any, TEvent, TTypestate>>,\n  options?: Partial<InterpreterOptions> &\n    Partial<UseMachineOptions<TContext, TEvent>> &\n    Partial<MachineOptions<TContext, TEvent>>\n) {\n  return useInterpret(machine, options);\n}\n\nexport function useState<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  Context: ContextMachineType<TContext, TEvent, TTypestate>\n): MachineType<TContext, TEvent, TTypestate>['state'] {\n  const service = useContextR(Context);\n\n  const [state] = useActor(service);\n  return state;\n}\n\nexport function useSelector<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  },\n  R = any\n>(\n  Context: ContextMachineType<TContext, TEvent, TTypestate>,\n  selector: Selector<TContext, TEvent, TTypestate, R>\n): R {\n  const service = useContextR(Context);\n\n  const _out = useSelectorR(service, selector);\n  return _out;\n}\n\nexport function useSend<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  Context: ContextMachineType<TContext, TEvent, TTypestate>\n): MachineType<TContext, TEvent, TTypestate>['send'] {\n  const service = useContextR(Context);\n\n  return service.send;\n}\n\nexport function useCustomService<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  Context: ContextMachineType<TContext, TEvent, TTypestate>\n): MachineType<TContext, TEvent, TTypestate>['custom_service'] {\n  const {\n    getSnapshot,\n    id,\n    initialState,\n    off,\n    onChange,\n    onDone,\n    onEvent,\n    onSend,\n    onStop,\n    status,\n    stop,\n    subscribe,\n    sessionId,\n    toJSON,\n  } = useContextR(Context);\n\n  return {\n    getSnapshot,\n    id,\n    initialState,\n    off,\n    onChange,\n    onDone,\n    onEvent,\n    onSend,\n    onStop,\n    status,\n    stop,\n    subscribe,\n    sessionId,\n    toJSON,\n  };\n}\n\nexport function useContext<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  Context: ContextMachineType<TContext, TEvent, TTypestate>\n): MachineType<TContext, TEvent, TTypestate> {\n  const out = {\n    state: useState(Context),\n    send: useSend(Context),\n    custom_service: useCustomService(Context),\n  };\n\n  return out;\n}\n","import { UseMachineOptions } from '@xstate/react/lib/types';\nimport React, { PropsWithChildren, useContext } from 'react';\nimport {\n  EventObject,\n  InterpreterOptions,\n  MachineOptions,\n  Typestate,\n} from 'xstate';\nimport { usePrepare } from './hooks';\nimport { ContextMachineType } from './types';\n\ntype Props<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n> = {\n  Context: ContextMachineType<TContext, TEvent, TTypestate>;\n  options?: Partial<InterpreterOptions> &\n    Partial<UseMachineOptions<TContext, TEvent>> &\n    Partial<MachineOptions<TContext, TEvent>>;\n};\n\nexport function MachineProvider<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>({\n  Context,\n  children,\n  options,\n}: PropsWithChildren<Props<TContext, TEvent, TTypestate>>): JSX.Element {\n  const service = useContext(Context);\n  const value = usePrepare(service.machine, options);\n\n  return <Context.Provider {...{ value }}>{children}</Context.Provider>;\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { UseMachineOptions } from '@xstate/react/lib/types';\nimport { createContext } from 'react';\nimport {\n  EventObject,\n  interpret,\n  InterpreterOptions,\n  MachineOptions,\n  StateMachine,\n  Typestate,\n} from 'xstate';\n\nexport function createContextMachine<\n  TContext,\n  TEvent extends EventObject,\n  TTypestate extends Typestate<TContext> = {\n    value: any;\n    context: TContext;\n  }\n>(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  machine: StateMachine<TContext, any, TEvent, TTypestate>,\n  options?: Partial<InterpreterOptions> &\n    Partial<UseMachineOptions<TContext, TEvent>> &\n    Partial<MachineOptions<TContext, TEvent>>\n) {\n  return createContext(interpret(machine, options));\n}\n"],"names":["usePrepare","machine","options","useInterpret","useState","Context","service","useContextR","useActor","useSend","send","useCustomService","getSnapshot","id","initialState","off","onChange","onDone","onEvent","onSend","onStop","status","stop","subscribe","sessionId","toJSON","children","value","useContext","React","Provider","createContext","interpret","state","custom_service","selector","useSelectorR"],"mappings":"4MAiBgBA,EAQdC,EACAC,UAIOC,eAAaF,EAASC,YAGfE,EAQdC,OAEMC,EAAUC,aAAYF,UAEZG,WAASF,eAsBXG,EAQdJ,UAEgBE,aAAYF,GAEbK,cAGDC,EAQdN,SAiBIE,aAAYF,SAET,CACLO,cAjBAA,YAkBAC,KAjBAA,GAkBAC,eAjBAA,aAkBAC,MAjBAA,IAkBAC,WAjBAA,SAkBAC,SAjBAA,OAkBAC,UAjBAA,QAkBAC,SAjBAA,OAkBAC,SAjBAA,OAkBAC,SAjBAA,OAkBAC,OAjBAA,KAkBAC,YAjBAA,UAkBAC,YAjBAA,UAkBAC,SAjBAA,gDCzEFpB,IAAAA,QACAqB,IAAAA,SACAxB,IAAAA,QAGMyB,EAAQ3B,EADE4B,aAAWvB,GACMJ,QAASC,UAEnC2B,gBAACxB,EAAQyB,0BAAa,CAAEH,MAAAA,IAAUD,0CCnBzCzB,EACAC,UAIO6B,gBAAcC,YAAU/B,EAASC,iCF6GxCG,SAEY,CACV4B,MAAO7B,EAASC,GAChBK,KAAMD,EAAQJ,GACd6B,eAAgBvB,EAAiBN,kFAlFnCA,EACA8B,OAEM7B,EAAUC,aAAYF,UAEf+B,cAAa9B,EAAS6B"}